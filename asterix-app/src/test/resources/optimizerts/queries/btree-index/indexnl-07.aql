/*
 * Description  : Notice the query hint to use an indexed nested-loops join plan. 
 *              : We expect a plan that hash-exchanges internal dataset DsTwo, then probes internal dataset DsOneâ€™s primary index. 
 * Expected Res : Success
 * Date         : 29th November 2012
 */

/*
 * Note : Index selection is arbitrary as of today, see creation date above.
 *      : There will be a time when the optimizer becomes more intelligent and deals with costs.  
 */

drop dataverse test if exists;
create dataverse test;
use dataverse test;

create type TestType as open {
          key1: int32,
          key2: int32,
          fname : string,
          lname : string
}

create dataset DsOne(TestType) partitioned by key key1;
create dataset DsTwo(TestType) partitioned by key key1;

// create secondary B-Tree indexes on fname and lname attributes

create index idx1 if not exists on DsOne(fname);
create index idx2 if not exists on DsTwo(lname);

for $x in dataset('DsOne')
for $y in dataset('DsTwo')
where $x.fname /*+ indexnl */ = $y.lname
return $x
